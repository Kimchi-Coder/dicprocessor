// <auto-generated />
using System;
using DicModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DicModels.Migrations
{
    [DbContext(typeof(DicContext))]
    [Migration("20220516000035_515700")]
    partial class _515700
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DicModels.Att", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Attribute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Uuid");

                    b.ToTable("Atts");
                });

            modelBuilder.Entity("DicModels.Equivalent", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SenseUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Uuid");

                    b.HasIndex("SenseUuid");

                    b.ToTable("Equivalents");
                });

            modelBuilder.Entity("DicModels.Feat", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Att")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EquivalentUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FormRepresentationUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LexicalEntryUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MultimediaUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RelatedFormUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SenseExampleUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SenseRelationUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SenseUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Val")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("WordFormUuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Uuid");

                    b.HasIndex("EquivalentUuid");

                    b.HasIndex("FormRepresentationUuid");

                    b.HasIndex("LexicalEntryUuid");

                    b.HasIndex("MultimediaUuid");

                    b.HasIndex("RelatedFormUuid");

                    b.HasIndex("SenseExampleUuid");

                    b.HasIndex("SenseRelationUuid");

                    b.HasIndex("SenseUuid");

                    b.HasIndex("WordFormUuid");

                    b.ToTable("Feats");
                });

            modelBuilder.Entity("DicModels.FormRepresentation", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Uuid");

                    b.ToTable("FormRepresentations");
                });

            modelBuilder.Entity("DicModels.Lemma", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FeatUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Uuid");

                    b.HasIndex("FeatUuid");

                    b.ToTable("Lemmas");
                });

            modelBuilder.Entity("DicModels.LexicalEntry", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Att")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LemmaUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LexiconUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Val")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("WordFormUuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Uuid");

                    b.HasIndex("LemmaUuid");

                    b.HasIndex("LexiconUuid");

                    b.HasIndex("WordFormUuid");

                    b.ToTable("LexicalEntries");
                });

            modelBuilder.Entity("DicModels.Lexicon", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FeatUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Uuid");

                    b.HasIndex("FeatUuid");

                    b.ToTable("Lexicons");
                });

            modelBuilder.Entity("DicModels.Multimedia", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SenseUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Uuid");

                    b.HasIndex("SenseUuid");

                    b.ToTable("Multimedias");
                });

            modelBuilder.Entity("DicModels.RelatedForm", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LexicalEntryUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Uuid");

                    b.HasIndex("LexicalEntryUuid");

                    b.ToTable("RelatedForms");
                });

            modelBuilder.Entity("DicModels.Sense", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Att")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LexicalEntryUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Val")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Uuid");

                    b.HasIndex("LexicalEntryUuid");

                    b.ToTable("Senses");
                });

            modelBuilder.Entity("DicModels.SenseExample", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SenseUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Uuid");

                    b.HasIndex("SenseUuid");

                    b.ToTable("SenseExamples");
                });

            modelBuilder.Entity("DicModels.SenseRelation", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SenseUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Uuid");

                    b.HasIndex("SenseUuid");

                    b.ToTable("SenseRelations");
                });

            modelBuilder.Entity("DicModels.Val", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Uuid");

                    b.ToTable("Vals");
                });

            modelBuilder.Entity("DicModels.WordForm", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Uuid");

                    b.ToTable("WordForms");
                });

            modelBuilder.Entity("DicModels.Equivalent", b =>
                {
                    b.HasOne("DicModels.Sense", null)
                        .WithMany("Equivalents")
                        .HasForeignKey("SenseUuid");
                });

            modelBuilder.Entity("DicModels.Feat", b =>
                {
                    b.HasOne("DicModels.Equivalent", null)
                        .WithMany("Feats")
                        .HasForeignKey("EquivalentUuid");

                    b.HasOne("DicModels.FormRepresentation", null)
                        .WithMany("Feats")
                        .HasForeignKey("FormRepresentationUuid");

                    b.HasOne("DicModels.LexicalEntry", null)
                        .WithMany("Feats")
                        .HasForeignKey("LexicalEntryUuid");

                    b.HasOne("DicModels.Multimedia", null)
                        .WithMany("Feats")
                        .HasForeignKey("MultimediaUuid");

                    b.HasOne("DicModels.RelatedForm", null)
                        .WithMany("Feats")
                        .HasForeignKey("RelatedFormUuid");

                    b.HasOne("DicModels.SenseExample", null)
                        .WithMany("Feats")
                        .HasForeignKey("SenseExampleUuid");

                    b.HasOne("DicModels.SenseRelation", null)
                        .WithMany("Feats")
                        .HasForeignKey("SenseRelationUuid");

                    b.HasOne("DicModels.Sense", null)
                        .WithMany("Feats")
                        .HasForeignKey("SenseUuid");

                    b.HasOne("DicModels.WordForm", null)
                        .WithMany("Feats")
                        .HasForeignKey("WordFormUuid");
                });

            modelBuilder.Entity("DicModels.Lemma", b =>
                {
                    b.HasOne("DicModels.Feat", "Feat")
                        .WithMany()
                        .HasForeignKey("FeatUuid");

                    b.Navigation("Feat");
                });

            modelBuilder.Entity("DicModels.LexicalEntry", b =>
                {
                    b.HasOne("DicModels.Lemma", "Lemma")
                        .WithMany()
                        .HasForeignKey("LemmaUuid");

                    b.HasOne("DicModels.Lexicon", null)
                        .WithMany("LexicalEntries")
                        .HasForeignKey("LexiconUuid");

                    b.HasOne("DicModels.WordForm", "WordForm")
                        .WithMany()
                        .HasForeignKey("WordFormUuid");

                    b.Navigation("Lemma");

                    b.Navigation("WordForm");
                });

            modelBuilder.Entity("DicModels.Lexicon", b =>
                {
                    b.HasOne("DicModels.Feat", "Feat")
                        .WithMany()
                        .HasForeignKey("FeatUuid");

                    b.Navigation("Feat");
                });

            modelBuilder.Entity("DicModels.Multimedia", b =>
                {
                    b.HasOne("DicModels.Sense", null)
                        .WithMany("Multimedias")
                        .HasForeignKey("SenseUuid");
                });

            modelBuilder.Entity("DicModels.RelatedForm", b =>
                {
                    b.HasOne("DicModels.LexicalEntry", null)
                        .WithMany("RelatedForms")
                        .HasForeignKey("LexicalEntryUuid");
                });

            modelBuilder.Entity("DicModels.Sense", b =>
                {
                    b.HasOne("DicModels.LexicalEntry", null)
                        .WithMany("Senses")
                        .HasForeignKey("LexicalEntryUuid");
                });

            modelBuilder.Entity("DicModels.SenseExample", b =>
                {
                    b.HasOne("DicModels.Sense", null)
                        .WithMany("SenseExample")
                        .HasForeignKey("SenseUuid");
                });

            modelBuilder.Entity("DicModels.SenseRelation", b =>
                {
                    b.HasOne("DicModels.Sense", null)
                        .WithMany("SenseRelations")
                        .HasForeignKey("SenseUuid");
                });

            modelBuilder.Entity("DicModels.Equivalent", b =>
                {
                    b.Navigation("Feats");
                });

            modelBuilder.Entity("DicModels.FormRepresentation", b =>
                {
                    b.Navigation("Feats");
                });

            modelBuilder.Entity("DicModels.LexicalEntry", b =>
                {
                    b.Navigation("Feats");

                    b.Navigation("RelatedForms");

                    b.Navigation("Senses");
                });

            modelBuilder.Entity("DicModels.Lexicon", b =>
                {
                    b.Navigation("LexicalEntries");
                });

            modelBuilder.Entity("DicModels.Multimedia", b =>
                {
                    b.Navigation("Feats");
                });

            modelBuilder.Entity("DicModels.RelatedForm", b =>
                {
                    b.Navigation("Feats");
                });

            modelBuilder.Entity("DicModels.Sense", b =>
                {
                    b.Navigation("Equivalents");

                    b.Navigation("Feats");

                    b.Navigation("Multimedias");

                    b.Navigation("SenseExample");

                    b.Navigation("SenseRelations");
                });

            modelBuilder.Entity("DicModels.SenseExample", b =>
                {
                    b.Navigation("Feats");
                });

            modelBuilder.Entity("DicModels.SenseRelation", b =>
                {
                    b.Navigation("Feats");
                });

            modelBuilder.Entity("DicModels.WordForm", b =>
                {
                    b.Navigation("Feats");
                });
#pragma warning restore 612, 618
        }
    }
}
